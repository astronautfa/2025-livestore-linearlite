/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SearchRouteImport } from './routes/search'
import { Route as BoardRouteImport } from './routes/board'
import { Route as IndexRouteImport } from './routes/index'
import { Route as IssueIdRouteImport } from './routes/issue.$id'

const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const BoardRoute = BoardRouteImport.update({
  id: '/board',
  path: '/board',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const IssueIdRoute = IssueIdRouteImport.update({
  id: '/issue/$id',
  path: '/issue/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/board': typeof BoardRoute
  '/search': typeof SearchRoute
  '/issue/$id': typeof IssueIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/board': typeof BoardRoute
  '/search': typeof SearchRoute
  '/issue/$id': typeof IssueIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/board': typeof BoardRoute
  '/search': typeof SearchRoute
  '/issue/$id': typeof IssueIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/board' | '/search' | '/issue/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/board' | '/search' | '/issue/$id'
  id: '__root__' | '/' | '/board' | '/search' | '/issue/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BoardRoute: typeof BoardRoute
  SearchRoute: typeof SearchRoute
  IssueIdRoute: typeof IssueIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/board': {
      id: '/board'
      path: '/board'
      fullPath: '/board'
      preLoaderRoute: typeof BoardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/issue/$id': {
      id: '/issue/$id'
      path: '/issue/$id'
      fullPath: '/issue/$id'
      preLoaderRoute: typeof IssueIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BoardRoute: BoardRoute,
  SearchRoute: SearchRoute,
  IssueIdRoute: IssueIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
